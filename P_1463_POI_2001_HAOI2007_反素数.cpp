#include <bits/stdc++.h>
using namespace std;
#define int long long
int n, ans, yue;
vector<int> ansv;
map<int,int> mp;

int p[500]= {1,2,4,6,12,24,36,48,60,120,180,240,360,720,840,1260,1680,2520,5040,7560,10080,15120,20160,25200,27720,45360,50400,55440,83160,110880,166320,221760,277200,332640,498960,554400,665280,720720,1081080,1441440,2162160,2882880,3603600,4324320,6486480,7207200,8648640,10810800,14414400,17297280,21621600,32432400,36756720,43243200,61261200,73513440,110270160,122522400,147026880,183783600,245044800,294053760,367567200,551350800,698377680,735134400,1102701600,1396755360,2001000000};

void dfs(int c1, int c2, int c3, int c4, int c5, int c6, int c7, int c8, int c9) {
	int x=pow(2,c1)*pow(3, c2)*pow(5,c3)*pow(7,c4)*pow(11,c5)*pow(13,c6)*pow(17,c7)*pow(19,c8)*pow(23,c9);
	int y = (c1+1)*(c2+1)*(c3+1)*(c4+1)*(c5+1)*(c6+1)*(c7+1)*(c8+1)*(c9+1);
	if (y > yue) yue = y, ans = x;
	if (y == yue) ans = min(ans, x);
	if (x * 2 <= n)              dfs(c1+1,c2,c3,c4,c5,c6,c7,c8,c9);
	if (x * 3 <= n && c2 < c1)   dfs(c1,c2+1,c3,c4,c5,c6,c7,c8,c9);
	if (x * 5 <= n && c3 < c2)   dfs(c1,c2,c3+1,c4,c5,c6,c7,c8,c9);
	if (x * 7 <= n && c4 < c3)   dfs(c1,c2,c3,c4+1,c5,c6,c7,c8,c9);
	if (x * 11 <= n && c5 < c4)  dfs(c1,c2,c3,c4,c5+1,c6,c7,c8,c9);
	if (x * 13 <= n && c6 < c5)  dfs(c1,c2,c3,c4,c5,c6+1,c7,c8,c9);
	if (x * 17 <= n && c7 < c6)  dfs(c1,c2,c3,c4,c5,c6,c7+1,c8,c9);
	if (x * 19 <= n && c8 < c7)  dfs(c1,c2,c3,c4,c5,c6,c7,c8+1,c9);
	if (x * 23 <= n && c9 < c8)  dfs(c1,c2,c3,c4,c5,c6,c7,c8,c9+1);
}

signed main() {
    int n;
    cin>>n;
    for(int i=0;;i++){
        if(p[i]>n){cout<<p[i-1];break;}
    }
	return 0;
}
